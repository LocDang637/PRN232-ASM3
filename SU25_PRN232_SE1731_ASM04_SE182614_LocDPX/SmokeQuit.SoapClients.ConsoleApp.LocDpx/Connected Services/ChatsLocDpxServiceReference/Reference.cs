//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatsLocDpxServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatsLocDpx", Namespace="http://schemas.datacontract.org/2004/07/SmokeQuit.SoapAPIServices.LocDPX.SoapMode" +
        "ls")]
    public partial class ChatsLocDpx : object
    {
        
        private string AttachmentUrlField;
        
        private int ChatsLocDpxidField;
        
        private int CoachIdField;
        
        private System.Nullable<System.DateTime> CreatedAtField;
        
        private bool IsReadField;
        
        private string MessageField;
        
        private string MessageTypeField;
        
        private System.Nullable<System.DateTime> ResponseTimeField;
        
        private string SentByField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentUrl
        {
            get
            {
                return this.AttachmentUrlField;
            }
            set
            {
                this.AttachmentUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChatsLocDpxid
        {
            get
            {
                return this.ChatsLocDpxidField;
            }
            set
            {
                this.ChatsLocDpxidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoachId
        {
            get
            {
                return this.CoachIdField;
            }
            set
            {
                this.CoachIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt
        {
            get
            {
                return this.CreatedAtField;
            }
            set
            {
                this.CreatedAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead
        {
            get
            {
                return this.IsReadField;
            }
            set
            {
                this.IsReadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType
        {
            get
            {
                return this.MessageTypeField;
            }
            set
            {
                this.MessageTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResponseTime
        {
            get
            {
                return this.ResponseTimeField;
            }
            set
            {
                this.ResponseTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentBy
        {
            get
            {
                return this.SentByField;
            }
            set
            {
                this.SentByField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatsLocDpxServiceReference.IChatsLocDpxSoapService")]
    public interface IChatsLocDpxSoapService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatsLocDpxSoapService/GetAll", ReplyAction="http://tempuri.org/IChatsLocDpxSoapService/GetAllResponse")]
        System.Threading.Tasks.Task<ChatsLocDpxServiceReference.ChatsLocDpx[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatsLocDpxSoapService/GetById", ReplyAction="http://tempuri.org/IChatsLocDpxSoapService/GetByIdResponse")]
        System.Threading.Tasks.Task<ChatsLocDpxServiceReference.ChatsLocDpx> GetByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatsLocDpxSoapService/Create", ReplyAction="http://tempuri.org/IChatsLocDpxSoapService/CreateResponse")]
        System.Threading.Tasks.Task<int> CreateAsync(ChatsLocDpxServiceReference.ChatsLocDpx chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatsLocDpxSoapService/Update", ReplyAction="http://tempuri.org/IChatsLocDpxSoapService/UpdateResponse")]
        System.Threading.Tasks.Task<ChatsLocDpxServiceReference.ChatsLocDpx> UpdateAsync(ChatsLocDpxServiceReference.ChatsLocDpx chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatsLocDpxSoapService/Delete", ReplyAction="http://tempuri.org/IChatsLocDpxSoapService/DeleteResponse")]
        System.Threading.Tasks.Task<int> DeleteAsync(int chatId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface IChatsLocDpxSoapServiceChannel : ChatsLocDpxServiceReference.IChatsLocDpxSoapService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class ChatsLocDpxSoapServiceClient : System.ServiceModel.ClientBase<ChatsLocDpxServiceReference.IChatsLocDpxSoapService>, ChatsLocDpxServiceReference.IChatsLocDpxSoapService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ChatsLocDpxSoapServiceClient() : 
                base(ChatsLocDpxSoapServiceClient.GetDefaultBinding(), ChatsLocDpxSoapServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IChatsLocDpxSoapService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ChatsLocDpxSoapServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ChatsLocDpxSoapServiceClient.GetBindingForEndpoint(endpointConfiguration), ChatsLocDpxSoapServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ChatsLocDpxSoapServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ChatsLocDpxSoapServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ChatsLocDpxSoapServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ChatsLocDpxSoapServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ChatsLocDpxSoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ChatsLocDpxServiceReference.ChatsLocDpx[]> GetAllAsync()
        {
            return base.Channel.GetAllAsync();
        }
        
        public System.Threading.Tasks.Task<ChatsLocDpxServiceReference.ChatsLocDpx> GetByIdAsync(int userId)
        {
            return base.Channel.GetByIdAsync(userId);
        }
        
        public System.Threading.Tasks.Task<int> CreateAsync(ChatsLocDpxServiceReference.ChatsLocDpx chat)
        {
            return base.Channel.CreateAsync(chat);
        }
        
        public System.Threading.Tasks.Task<ChatsLocDpxServiceReference.ChatsLocDpx> UpdateAsync(ChatsLocDpxServiceReference.ChatsLocDpx chat)
        {
            return base.Channel.UpdateAsync(chat);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int chatId)
        {
            return base.Channel.DeleteAsync(chatId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IChatsLocDpxSoapService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IChatsLocDpxSoapService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:7234/ChatsService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ChatsLocDpxSoapServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IChatsLocDpxSoapService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ChatsLocDpxSoapServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IChatsLocDpxSoapService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IChatsLocDpxSoapService,
        }
    }
}
